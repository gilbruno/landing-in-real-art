generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model collectionNfts {
  id           Int      @id(map: "collectionLeloluce_pkey") @default(autoincrement())
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  email        String?  @db.VarChar
  resourcePath String

  @@unique([email, resourcePath], map: "collectionnfts_unique")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model newsletter {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  email      String?  @unique(map: "email_unique") @db.VarChar
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model presaleArtworkOrder {
  id               Int    @id(map: "presaleArtworkSold_pkey") @default(autoincrement())
  artistName       String
  artworkName      String
  hashArt          String? @unique(map: "presaleArtworkSold_hashArt_key")
  tokenId          Int?
  txHash           String? @unique(map: "presaleArtworkSold_txHash_key")
  owner            String
  collectionName   String?
  collectionSymbol String?
  price            Float  @db.Real
  offerNumber      Int
  status           ResourceNftStatus
  imageUri         String
  gatewayImageUri  String
  metadataUri        String?
  gatewayMetadataUri String?
  lang             Lang
  contractAddress  String
  maxCancelDate    DateTime @db.Timestamptz(6)
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  @@unique([owner, artistName, artworkName, offerNumber], map: "presaleArtworkOrder_unique")
}


model buyerPresale {
  id               Int    @id(map: "buyerPresale_pkey") @default(autoincrement())
  publicKey String @unique(map: "buyerPresale_publicKey_key")
  firstName String
  lastName String
  address String
  email String
  phone String
} 

enum ResourceNftStatus {
  UPLOADIPFS
  UPLOADMETADATA
  MINED
}

enum Lang {
  CN
  EN
  FR
}